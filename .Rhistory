library(GEOquery)
.libPaths()
GSE93204 <- getGEO('GSE93204', GSEMatrix = F)
probesets <- Table(GPLList(GSE93204)[[1]])$ID
Meta(GSMList(GSE93204)[[1]])
Table(GSE93204[[1]])
GSE93204_matrix <- do.call('cbind', lapply(GSE93204@gsms, function(x) {
tab <- Table(x)
mymatch <- match(probesets, tab$ID_REF)
return(tab$VALUE[mymatch])
}))
View(GSE93204_matrix)
View(GSE93204_matrix)
str(GSE93204_matrix)
GSE93204@gsms
tail(GSE93204_matrix)
probesets
length(probesets)
str(GSE93204_matrix)
Table(GSE93204[[1]])
Table(GSE93204@gsms)
Table(GSE93204@gsms[[1]])
GSE93204_matrix <- do.call('cbind', lapply(GSE93204@gsms, function(x) {
tab <- Table(x)
mymatch <- match(probesets, tab$ID_REF)
return(tab[mymatch])
}))
GSE93204_matrix <- do.call('cbind', lapply(GSE93204@gsms, function(x) {
tab <- Table(x)
mymatch <- match(probesets, tab$ID_REF)
return(tab[mymatch])
}))
GSE93204_matrix <- do.call('cbind', lapply(GSE93204@gsms, function(x) {
tab <- Table(x)
mymatch <- match(probesets, tab$ID_REF)
return(tab[mymatch])
}))
GSE93204_matrix <- do.call('cbind', lapply(GSE93204@gsms, function(x) {
tab <- Table(x)
mymatch <- match(probesets, tab$ID_REF)
return(tab[mymatch,])
}))
View(GSE93204_matrix)
probesets
str(GSE93204_matrix)
View(GSE93204_matrix)
return(tab@value[mymatch])
GSE93204_matrix <- do.call('cbind', lapply(GSE93204@gsms, function(x) {
tab <- Table(x)
mymatch <- match(probesets, tab$ID_REF)
return(tab@value[mymatch])
}))
GSE93204_matrix <- do.call('cbind', lapply(GSE93204@gsms, function(x) {
tab <- Table(x)
mymatch <- match(probesets, tab$ID_REF)
return(tab$VALUE[mymatch])
}))
View(GSE93204_matrix)
rownames(GSE93204_matrix) <- probesets
View(GSE93204_matrix)
is.na(GSE93204_matrix)
?is.na
all(is.na(GSE93204_matrix))
GSE93204_matrix_final <- apply(GSE93204_matrix, 1, function(x) all(is.na(x)))
View(GSE93204_matrix)
GSE93204_matrix_final
GSE93204_matrix_final <- GSE93204_matrix[!indice,]
indice <- apply(GSE93204_matrix, 1, function(x) all(is.na(x)))
GSE93204_matrix_final <- GSE93204_matrix[!indice,]
str(GSE93204_matrix_final)
View(GSE93204_matrix_final)
match(c(1,2,3), c(2,3,1))
match(c(1,2,3), c(3,2,1))
match(c('a','b','c'), c('c','b','a'))
a = c('a','b','c')
b = c('c','b','a')
match(a,b)
match(b,a)
a[match(a,b)]
b[match(a,b)]
?match
a = c('a','b')
match(a,b)
b = c('c','b','a','d')
match(a,b)
a[match(a,b)]
b[match(a,b)]
C0D1_resistance <- c('GSM2448528', 'GSM2448537', 'GSM2448539', 'GSM2448544', 'GSM2448555')
C0D1_sensitive <- c('GSM2448485', 'GSM2448493', 'GSM2448497', 'GSM2448505', 'GSM2448507',
'GSM2448519', 'GSM2448522', 'GSM2448525', 'GSM2448534', 'GSM2448547',
'GSM2448551', 'GSM2448561', 'GSM2448564', 'GSM2448567', 'GSM2448570',
'GSM2448582', 'GSM2448594')
C0D1 <- c(C0D1_sensitive, C0D1_resistance)
matrix_C0D1 <- GSE93204_matrix_final[,match(C0D1, colnames(GSE93204_matrix_final))]
View(matrix_C0D1)
library(limma)
length(C0D1_sensitive)
setwd("D:/OneDrive - McGill University/R/Microarray/Sophie")
model_C0D1 <- cbind(1, c(rep(0, length(C0D1_sensitive)), rep(1, length(C0D1_resistance))))
model_C0D1
length(C0D1)
fit <- lmFit(GSE93204_matrix_final, model_C0D1)
fit <- lmFit(matrix_C0D1, model_C0D1)
fit <- eBayes(fit)
tt <- topTable(fit, coef=2, adjust.method = 'BH', sort.by = 'p', number =50000)
View(tt)
cor(model_C0D1)
cor(matrix_C0D1)
cor(matrix_C0D1, rm.na=T)
cor(matrix_C0D1)
?cor
cor(matrix_C0D1, na.rm = T)
cor(matrix_C0D1, na.rm = T)
cor(matrix_C0D1, use = 'everything')
cor(as.matrix(matrix_C0D1))
View(matrix_C0D1)
cor(matrix_C0D1, use = 'parwise')
cor(matrix_C0D1, use = 'pairwise')
library(pheatmap)
install.packages('pheatmap')
install.packages('corrplot')
library(carrplot)
library(corrplot)
library(pheatmap)
corrplot(matrix_C0D1)
corrplot()
?corrplot()
cor(matrix_C0D1, use='pairwise')
pheatmap(cor(matrix_C0D1, use='pairwise'))
pheatmap(cor(matrix_C0D1, use='pairwise'), cluster_rows = F, cluster_cols = F)
matrix_C0D1_nomalize <- normalizeQuantiles(matrix_C0D1)
pheatmap(cor(matrix_C0D1_normalize, use='pairwise'), cluster_rows = F, cluster_cols = F)
matrix_C0D1_normalize <- normalizeQuantiles(matrix_C0D1)
pheatmap(cor(matrix_C0D1_normalize, use='pairwise'), cluster_rows = F, cluster_cols = F)
pheatmap(cor(matrix_C0D1_normalize, use='pairwise'), cluster_rows = F, cluster_cols = F)
pheatmap(cor(matrix_C0D1_normalize, use='pairwise'), cluster_rows = F, cluster_cols = F)
cor(matrix_C0D1_normalize, use='pairwise')
library(annotate)
View(GSE93204_matrix)
str(GSE93204_matrix)
annotation <- read.table('GPL6480-9577-simplified.txt', header = T, stringsAsFactors = F)
annotation <- read.table('GPL6480-9577-simplified.txt', header = T, stringsAsFactors = F)
annotation <- read.table('GPL6480-9577-simplified.txt', header = T, stringsAsFactors = F)
View(annotation)
head(tt)
rownames(tt)
View(annotation)
annotation <- read.table('GPL6480-9577-simplified.txt', header = T, stringsAsFactors = F)
View(annotation)
merge(tt, annotation, by.x=0, by.y=1)
annotated_tt <- merge(tt, annotation, by.x=0, by.y=1)
View(annotated_tt)
View(annotated_tt)
View(annotated_tt)
str(GSE93204_matrix)
head(annotation)
GSE93204_matrix_GENE <- merge(GSE93204_matrix, annotation, by.x=rownames(GSE93204_matrix), by.y=1)
GSE93204_matrix_GENE <- merge(GSE93204_matrix, annotation, by.x=0, by.y=1)
View(GSE93204_matrix_GENE)
tail(GSE93204_matrix_GENE)
str(GSE93204_matrix)
str(annotation)
tail(GSE93204_matrix)
tail(GSE93204_matrix, 20)
tail(rownames(GSE93204_matrix),20)
head(GSE93204_matrix_GENE)
str(GSE93204_matrix_GENE)
rownames(GSE93204_matrix_GENE) <- GSE93204_matrix_GENE$GENE_SYMBOL
GSE93204_matrix_final <- GSE93204_matrix[!indice,]
C0D1_sensitive <- c('GSM2448485', 'GSM2448493', 'GSM2448497', 'GSM2448505', 'GSM2448507',
'GSM2448519', 'GSM2448522', 'GSM2448525', 'GSM2448534', 'GSM2448547',
'GSM2448551', 'GSM2448561', 'GSM2448564', 'GSM2448567', 'GSM2448570',
'GSM2448582', 'GSM2448594')
C0D1_resistance <- c('GSM2448528', 'GSM2448537', 'GSM2448539', 'GSM2448544', 'GSM2448555')
matrix_C0D1 <- GSE93204_matrix_final[,match(C0D1, colnames(GSE93204_matrix_final))]
matrix_C0D1_normalize <- normalizeQuantiles(matrix_C0D1)
fit <- lmFit(matrix_C0D1_normalize, model_C0D1)
fit <- eBayes(fit)
tt <- topTable(fit, coef=2, adjust.method = 'BH', sort.by = 'p', number =50000)
annotation <- read.table('GPL6480-9577-simplified.txt', header = T, stringsAsFactors = F)
annotated_tt <- merge(tt, annotation, by.x=0, by.y=1)
View(annotated_tt)
boxplot(matrix_C0D1_normalize)
boxplot(matrix_C0D1)
boxplot(matrix_C0D1_normalize)
pheatmap(cor(matrix_C0D1_normalize, use='pairwise'), cluster_rows = F, cluster_cols = F)
pheatmap(cor(matrix_C0D1_normalize, use='pairwise'), cluster_rows = F, cluster_cols = F, breaks = c(0.5, 0.5))
pheatmap(cor(matrix_C0D1_normalize, use='pairwise'), cluster_rows = F, cluster_cols = F, breaks = c(-0.5, 0.5))
?pheatmap
View(annotated_tt)
rm(GSE93204_matrix_GENE)
rm(matrix_C0D1_nomalize)
fit_C0D1 <- lmFit(matrix_C0D1_normalize, model_C0D1)
model_C0D1
tt_C0D1 <- topTable(fit, coef=2, adjust.method = 'BH', sort.by = 'p', number =50000)
annotated_C0D1 <- merge(tt, annotation, by.x=0, by.y=1)
View(annotated_C0D1)
C1D1_sensitive <- c('GSM2448486','GSM2448491','GSM2448494','GSM2448498','GSM2448501',
'GSM2448508','GSM2448520','GSM2448526','GSM2448535','GSM2448552',
'GSM2448556','GSM2448562','GSM2448565','GSM2448568','GSM2448571',
'GSM2448577','GSM2448583','GSM2448586','GSM2448588','GSM2448591',
'GSM2448595')
C1D1_resistance <- c('GSM2448529','GSM2448538')
C1D1 <- c(C0D1_sensitive, C0D1_resistance)
matrix_C1D1 <- GSE93204_matrix_final[,match(C1D1, colnames(GSE93204_matrix_final))]
model_C1D1 <- cbind(1, c(rep(0, length(C0D1_sensitive)), rep(1, length(C0D1_resistance))))
model_C1D1
model_C1D1 <- cbind(1, c(rep(0, length(C1D1_sensitive)), rep(1, length(C1D1_resistance))))
model_C1D1
matrix_C1D1_normalize <- normalizeQuantiles(matrix_C1D1)
fit_C1D1 <- lmFit(matrix_C1D1_normalize, model_C1D1)
fit_C1D1 <- eBayes(fit_C1D1)
matrix_C1D1_normalize <- normalizeQuantiles(matrix_C1D1)
fit_C1D1 <- lmFit(matrix_C1D1_normalize, model_C1D1)
matrix_C1D1 <- GSE93204_matrix_final[,match(C1D1, colnames(GSE93204_matrix_final))]
model_C1D1 <- cbind(1, c(rep(0, length(C1D1_sensitive)), rep(1, length(C1D1_resistance))))
matrix_C1D1_normalize <- normalizeQuantiles(matrix_C1D1)
fit_C1D1 <- lmFit(matrix_C1D1_normalize, model_C1D1)
View(matrix_C1D1_normalize)
str(matrix_C1D1_normalize)
str(model_C1D1)
matrix_C1D1 <- GSE93204_matrix_final[,match(C1D1, colnames(GSE93204_matrix_final))]
str(matrix_C1D1)
match(C1D1, colnames(GSE93204_matrix_final)
match(C1D1, colnames(GSE93204_matrix_final)
match(C1D1, colnames(GSE93204_matrix_final))
colnames(matrix_C1D1)
C1D1_sensitive <- c('GSM2448486','GSM2448491','GSM2448494','GSM2448498','GSM2448501',
'GSM2448508','GSM2448520','GSM2448526','GSM2448535','GSM2448552',
'GSM2448556','GSM2448562','GSM2448565','GSM2448568','GSM2448571',
'GSM2448577','GSM2448583','GSM2448586','GSM2448588','GSM2448591',
'GSM2448595')
C1D1_resistance <- c('GSM2448529','GSM2448538')
C1D1 <- c(C0D1_sensitive, C0D1_resistance)
C1D1 <- c(C1D1_sensitive, C1D1_resistance)
C1D1_resistance <- c('GSM2448529','GSM2448538')
C1D1 <- c(C1D1_sensitive, C1D1_resistance)
matrix_C1D1 <- GSE93204_matrix_final[,match(C1D1, colnames(GSE93204_matrix_final))]
colnames(matrix_C1D1)
model_C1D1 <- cbind(1, c(rep(0, length(C1D1_sensitive)), rep(1, length(C1D1_resistance))))
matrix_C1D1_normalize <- normalizeQuantiles(matrix_C1D1)
fit_C1D1 <- lmFit(matrix_C1D1_normalize, model_C1D1)
fit_C1D1 <- eBayes(fit_C1D1)
tt_C1D1 <- topTable(fit_C1D1, coef=2, adjust.method = 'BH', sort.by = 'p', number =50000)
annotated_C1D1 <- merge(tt_C1D1, annotation, by.x=0, by.y=1)
View(annotated_C1D1)
View(annotated_C0D1)
C1D15_sensitive <- c('GSM2448487','GSM2448489','GSM2448495','GSM2448499','GSM2448502',
'GSM2448509','GSM2448515','GSM2448521','GSM2448523','GSM2448527',
'GSM2448536','GSM2448553','GSM2448563','GSM2448572','GSM2448584',
'GSM2448587','GSM2448589','GSM2448592','GSM2448596')
C1D15_resistance <- c('GSM2448530','GSM2448540','GSM2448545')
C1D15 <- c(C1D15_sensitive, C1D5_resistance)
C1D15_resistance <- c('GSM2448530','GSM2448540','GSM2448545')
C1D15 <- c(C1D15_sensitive, C1D5_resistance)
C1D15 <- c(C1D15_sensitive, C1D15_resistance)
matrix_C1D15 <- GSE93204_matrix_final[,match(C1D15, colnames(GSE93204_matrix_final))]
model_C1D15 <- cbind(1, c(rep(0, length(C1D15_sensitive)), rep(1, length(C1D15_resistance))))
model_C1D15 <- cbind(1, c(rep(0, length(C1D15_sensitive)),
rep(1, length(C1D15_resistance))))
matrix_C1D15_normalize <- normalizeQuantiles(matrix_C1D15)
fit_C1D15 <- lmFit(matrix_C1D15_normalize, model_C1D15)
fit_C1D15 <- eBayes(fit_C1D15)
tt_C1D15 <- topTable(fit_C1D15, coef=2, adjust.method = 'BH', sort.by = 'p', number =50000)
annotated_C1D15 <- merge(tt_C1D15, annotation, by.x=0, by.y=1)
View(annotated_C0D1)
View(annotated_C1D15)
surgery_sensitive <- c('GSM2448488','GSM2448490','GSM2448492','GSM2448496','GSM2448500',
'GSM2448503','GSM2448506','GSM2448524','GSM2448548','GSM2448554',
'GSM2448566','GSM2448569','GSM2448573','GSM2448585','GSM2448590',
'GSM2448593','GSM2448597')
surgery_resistance <- c('GSM2448546')
surgery <- c(surgery_sensitive, surgey_resistance)
surgery <- c(surgery_sensitive, surgery_resistance)
matrix_surgery <- GSE93204_matrix_final[,match(surgery, colnames(GSE93204_matrix_final))]
model_surgery <- cbind(1, c(rep(0, length(surgery_sensitive)),
rep(1, length(surgery_resistance))))
matrix_surgery_normalize <- normalizeQuantiles(matrix_surgery)
model_surgery <- cbind(1, c(rep(0, length(surgery_sensitive)),
rep(1, length(surgery_resistance))))
matrix_surgery_normalize <- normalizeQuantiles(matrix_surgery)
fit_surgery <- lmFit(matrix_surgery_normalize, model_surgery)
fit_surgery <- eBayes(fit_surgery)
fit_surgery <- eBayes(fit_surgery)
tt_surgery <- topTable(fit_surgery, coef=2, adjust.method = 'BH', sort.by = 'p', number =50000)
annotated_surgery <- merge(tt_surgery, annotation, by.x=0, by.y=1)
View(annotated_surgery)
pheatmap(cor(matrix_C1D1_normalize, use='pairwise'), cluster_rows = F, cluster_cols = F)
boxplot(matrix_C1D1_normalize)
cor(matrix_C0D1_normalize, use='pairwise')
model_C1D1
model_C1D15
pheatmap(cor(matrix_C1D15, use='pairwise'), cluster_rows = F, cluster_cols = F)
boxplot(matrix_C1D15_normalize)
target_genes <- scan('gene_targets.txt', what= 'character')
target_genes
C0D1_target <- match(target_genes,annotated_C0D1$GENE_SYMBOL)
C0D1_target <- annotated_C0D1[match(target_genes,annotated_C0D1$GENE_SYMBOL),]
C0D1_target
View(C0D1_target)
match(target_genes, annotated_C0D1$GENE_SYMBOL)
View(annotation)
match(target_genes, annotation$GENE_SYMBOL)
target_genes <- scan('gene_targets.txt', what= 'character')
match(target_genes, annotation$GENE_SYMBOL)
C1D1_target <- annotated_C1D1[match(target_genes,annotated_C1D1$GENE_SYMBOL),]
View(C0D1_target)
View(C1D1_target)
C1D15_target <- annotated_C1D15[match(target_genes),annotated_C1D15$GENE_SYMBOL,]
C1D15_target <- annotated_C1D15[match(target_genes,annotated_C1D15$GENE_SYMBOL),]
surgery_target <- annotated_surgery[match(target_genes,annotated_C1D15$GENE_SYMBOL),]
View(C0D1_target)
View(C1D1_target)
View(C1D15_target)
View(surgery_target)
?write.csv
write.csv(C0D1_target, 'C0D1_target.csv', col.names = T)
write.csv(C1D1_target, 'C1D1_target.csv', col.names = T)
write.csv(C1D15_target, 'C1D15_target.csv', col.names = T)
write.csv(C1D15_target, 'C1D15_target.csv', col.names = T)
write.csv(surgery_target, 'surgery_target.csv', col.names = T)
View(annotated_C1D15)
View(matrix_C1D1_normalize)
write.csv(matrix_C1D1_normalize, 'C0D1_normalized_matrix.csv',col.names = T)
write.csv(matrix_C0D1_normalize, 'C0D1_normalized_matrix.csv',col.names = T)
write.csv(matrix_C1D15_normalize, 'C1D15_normalized_matrix.csv', col.names = T)
write.csv(matrix_surgery_normalize, 'sugery_normalized_matrix.csv', col.names = T)
setwd("D:/OneDrive - McGill University/R/Microarray/SCP2_Microarray")
raw_data <- read.table('SCP2_Microarray.txt', header = T, row.names = 1, stringsAsFactors = F)
log2_data <- log2(raw_data)
data_norm <- as.matrix(normalizeQuantiles(log2_data))
boxplot(data_norm, outline=F)
design <- cbind(1, c(0,0,1,1))
fit <- lmFit(data_norm, design)
fit <- eBayes(fit)
tt <- topTable(fit, coef=2, adjust.method = 'BH', sort.by = 'p', number =50000)
tt$log_trans <- -log10(tt$adj.P.Val)
library(tidyverse)
library(dplyr)
library(tidyverse)
tt <- tt %>%
mutate(color=case_when(logFC<0 & adj.P.Val<0.05 ~ 'blue',
logFC>0 & adj.P.Val<0.05 ~ 'red',
TRUE ~ 'black'))
head(tt)
ggplot(tt, aes(x=logFC, y=log_trans, fill=color))+
geom_point(size= 2, shape=16, position = 'jitter')
ggplot(tt, aes(x=logFC, y=log_trans, color=color))+
geom_point(size= 2, shape=16, position = 'jitter')
ggplot(tt, aes(x=logFC, y=log_trans, color=c('blue', 'black', 'red')))+
geom_point(size= 2, shape=16, position = 'jitter')
ggplot(tt, aes(x=logFC, y=log_trans)))+
geom_point(size= 2, shape=16, position = 'jitter', , color=c('blue', 'black', 'red')
ggplot(tt, aes(x=logFC, y=log_trans))+
geom_point(size= 2, shape=16, position = 'jitter', color=c('blue', 'black', 'red'))
ggplot(tt, aes(x=logFC, y=log_trans))+
geom_point(size= 2, shape=16, position = 'jitter', color=c('blue', 'black', 'red'))
ggplot(tt, aes(x=logFC, y=log_trans))+
geom_point(size= 2, shape=16, position = 'jitter', fill=c('blue', 'black', 'red'))
ggplot(tt, aes(x=logFC, y=log_trans, fill=color))+
geom_point(size= 2, shape=16, position = 'jitter')
ggplot(tt, aes(x=logFC, y=log_trans, color=color))+
geom_point(size= 2, shape=16, position = 'jitter')
ggplot(tt, aes(x=logFC, y=log_trans, color=color))+
geom_point(size= 2, shape=16, position = 'jitter') +
scale_color_manual(values = c('blue', 'black', 'red'))
ggplot(tt, aes(x=logFC, y=log_trans, color=color))+
geom_point(size= 2, shape=16, position = 'jitter') +
scale_color_manual(values = c('black', 'blue', 'red'))
ggplot(tt, aes(x=logFC, y=log_trans, color=color))+
geom_point(size= 2, shape=16, position = 'jitter', alpha=0.6) +
scale_color_manual(values = c('black', 'blue', 'red'))
ggplot(tt, aes(x=logFC, y=log_trans, color=color))+
geom_point(size= 2, shape=16, position = 'jitter', alpha=0.4) +
scale_color_manual(values = c('black', 'blue', 'red'))
ggplot(tt, aes(x=logFC, y=log_trans, color=color))+
geom_point(size= 2, shape=16, position = 'jitter', alpha=0.4) +
scale_color_manual(values = c('black', 'blue', 'red')) +
geom_hline(yintercept = 1.30102999566398, size=1, linetype='dashed') +
theme_classic()
?xlim
max(tt$logFC)
ggplot(tt, aes(x=logFC, y=log_trans, color=color))+
geom_point(size= 2, shape=16, position = 'jitter', alpha=0.4) +
scale_color_manual(values = c('black', 'blue', 'red')) +
geom_hline(yintercept = 1.30102999566398, size=1, linetype='dashed') +
xlim(-3.5,3.5)
ggplot(tt, aes(x=logFC, y=log_trans, color=color))+
geom_point(size= 2, shape=16, position = 'jitter', alpha=0.6) +
scale_color_manual(values = c('black', 'blue', 'red')) +
geom_hline(yintercept = 1.30102999566398, size=1, linetype='dashed') +
xlim(-3.5,3.5)
ggplot(tt, aes(x=logFC, y=log_trans, color=color))+
geom_point(size= 2, shape=16, position = 'jitter', alpha=0.6) +
scale_color_manual(values = c('black', 'blue', 'red')) +
geom_hline(yintercept = 1.30102999566398, size=1, linetype='dashed') +
xlim(-3.5,3.5)
ggplot(tt, aes(x=logFC, y=log_trans, color=color))+
geom_point(size= 2, shape=16, position = 'jitter', alpha=0.6) +
scale_color_manual(values = c('black', 'blue', 'red')) +
geom_hline(yintercept = 1.30102999566398, size=1, linetype='dashed') +
xlim(-3.5,3.5) +
theme_classic()
ggplot(tt, aes(x=logFC, y=log_trans, color=color))+
geom_point(size= 3, shape=16, position = 'jitter', alpha=0.6) +
scale_color_manual(values = c('black', 'blue', 'red')) +
geom_hline(yintercept = 1.30102999566398, size=1, linetype='dashed') +
xlim(-3.5,3.5) +
theme_classic()
dev.off()
dev.off()
setwd("D:/OneDrive - McGill University/R/Microarray/SCP2_Microarray")
volcano_plot <-
ggplot(tt, aes(x=logFC, y=log_trans, color=color))+
geom_point(size= 3, shape=16, position = 'jitter', alpha=0.6) +
scale_color_manual(values = c('black', 'blue', 'red')) +
geom_hline(yintercept = 1.30102999566398, size=1, linetype='dashed') +
xlim(-3.5,3.5) +
theme_classic()
volcano_plot
png(filename = 'volcano_plot.png', res = 600, width = 4800, height = 3600)
volcano_plot
dev.off()
dev.off()
dev.off()
jpeg(filename = 'volcano_plot.png', res = 600, width = 6000, height = 3600)
dev.off()
jpeg(filename = 'volcano_plot.jpeg', res = 600, width = 6000, height = 3600)
volcano_plot
dev.off()
png(filename = 'volcano_plot.png', res = 600, width = 4800, height = 3600)
volcano_plot
dev.off()
png(filename = 'volcano_plot.png', res = 600, width = 6000, height = 3600)
volcano_plot
dev.off()
GO_BP <- read.table('GO_Biological_Process_2018_table.txt', header = T, sep = '\t', stringsAsFactors = F)
GO_BP_simple <- GO_BP[,c(1,9)]
split_fun <- function(x) {
unlist(strsplit(x, split=';'))
}
GO_BP_simple$Comp <- lapply(GO_BP_simple$Genes, split_fun)
split_fun <- function(x) {
unlist(strsplit(x, split=';'))
}
GO_BP_simple$Comp <- lapply(GO_BP_simple$Genes, split_fun)
GO_BP
View(GO_BP_simple)
split_fun <- function(x) {
unlist(strsplit(x, split=';'))
}
View(GO_BP_simple)
GO_BP <- read.table('GO_Biological_Process_2018_table.txt', header = F, sep = '\t', stringsAsFactors = F)
GO_BP_simple <- GO_BP[,c(1,9)]
View(GO_BP_simple)
GO_BP_simple$Comp <- lapply(GO_BP_simple$V9, split_fun)
GO_BP_simple$Comp <- lapply(GO_BP_simple$V9, split_fun)
normalized_data <- read.csv('normalized_data.csv', header = T, row.names = 1)
GO_0045596 <- GO_BP_simple$Comp[[8]]
GO_0072182 <- GO_BP_simple$Comp[[26]]
cell_differentiation <- unique(c(GO_0045596, GO_0072182))
cell_differentiation
cell_differentiation <- unique(c(GO_0045596, GO_0072182, 'BMP4'))
cell_differentiation
cell_differentiation_data <- normalized_data[match(cell_differentiation, rownames(normalized_data)),]
pheatmap(cell_differentiation_data, scale = 'row', cluster_cols = F, border_color = NA)
